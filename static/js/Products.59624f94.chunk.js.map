{"version":3,"file":"static/js/Products.59624f94.chunk.js","mappings":"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","sources":["webpack://client/./src/pages/Products/Products.module.css?126f","pages/Products/Products.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Products_wrapper__aniuN\",\"loaderWrapper\":\"Products_loaderWrapper__cHCzJ\",\"selectWrapper\":\"Products_selectWrapper__AtyoL\",\"select\":\"Products_select__NVaeX\",\"warning\":\"Products_warning__Ty0bg\",\"moneyInfo\":\"Products_moneyInfo__Qmsps\",\"optionsWrapper\":\"Products_optionsWrapper__NkICO\"};","import s from './Products.module.css';\nimport {useNavigate} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport Container from \"../../components/Container\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport MobileDateRangePicker from '@mui/lab/MobileDateRangePicker';\nimport TextField from \"@mui/material/TextField\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\n\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {productsApi} from \"../../services\";\nimport ProductContainer from \"../../components/ProductContainer\";\nimport states from \"../../config/states\";\nimport Loader from \"react-loader-spinner\";\nimport moment from \"moment\";\nimport {MenuItem, Select} from \"@mui/material\";\n\ntoast.configure();\n\nconst reducer = (previousValue, currentValue) => previousValue + currentValue;\n\nconst Products = ({isLoggedIn}) => {\n    const navigate = useNavigate();\n    const [products, setProducts] = useState([]);\n    const [earnedMoney, setEarnedMoney] = useState([]);\n    const [spendMoney, setSpendMoney] = useState([]);\n    const [loading, setLoading] = useState(false)\n    const [mounted, setMounted] = useState(false);\n    const [value, setValue] = useState([null,null]);\n    const [state, setState] = useState(0);\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            navigate('/login')\n        }\n    }, [isLoggedIn])\n\n    useEffect(() => {\n        setLoading(true)\n        fetchProducts().then(() => {\n            setLoading(false)\n        });\n        return () => {\n            setMounted(true);\n        }\n    }, [state])\n\n    useEffect(()=>{\n        fetchProducts();\n    },[value])\n\n    const fetchProducts = async () => {\n        try {\n            const response = await productsApi.getProducts({\n                state,\n                startDate:value[0]?moment(value[0]).toISOString():null,\n                endDate:value[1]?moment(value[1]).toISOString():null\n            });\n            setProducts(response);\n            const sumSpendArr = [...response].map(el => el.price.purchasePrice);\n            const sumEarnedArr = [...response].map(el=>{\n                if (el.price.sallingPrice){\n                    return el.price.sallingPrice - el.price.purchasePrice\n                }\n                return 0;\n            });\n            setEarnedMoney(sumEarnedArr);\n            setSpendMoney(sumSpendArr);\n        } catch (e) {\n            toast.error(e.response.data.message, {\n                position: 'top-center'\n            })\n        }\n    }\n\n    const onSelectChange = (e) => {\n        setState(e.target.value);\n    }\n\n    return (<Container>\n        {\n            loading ? <div className={s.loaderWrapper}>\n                <Loader type=\"Bars\" color=\"#ff8614\" height={200} width={200}/>\n            </div> : <>\n                <div className={s.optionsWrapper}>\n                    <div className={s.selectWrapper}>\n                        <p>Filter: </p>\n                        <Select onChange={onSelectChange} value={state} className={s.select}>\n                            {\n                                states.map(el => {\n                                    return <MenuItem key={el.id} value={el.id}>{el.name}</MenuItem>\n                                })\n                            }\n                        </Select>\n                    </div>\n                    <div className={s.selectWrapper}>\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <Stack spacing={3}>\n                                <MobileDateRangePicker\n                                    startText=\"Start date\"\n                                    endText='End date'\n                                    clearable\n                                    value={value}\n                                    disableFuture\n                                    onChange={(newValue) => {\n                                            setValue(newValue);\n                                    }}\n                                    renderInput={(startProps, endProps) => (\n                                        <React.Fragment>\n                                            <TextField {...startProps} />\n                                            <Box sx={{ mx: 2 }}> to </Box>\n                                            <TextField {...endProps} />\n                                        </React.Fragment>\n                                    )}\n                                />\n                            </Stack>\n                        </LocalizationProvider>\n                    </div>\n                </div>\n                <div className={s.moneyInfo}>\n                    <h2>Money spend: {spendMoney.length > 0 ? Math.round(spendMoney.reduce(reducer)): 0}</h2>\n                    <h2>Money earned: {earnedMoney.length > 0 ? Math.round(earnedMoney.reduce(reducer)): 0}</h2>\n                </div>\n                <div className={s.wrapper}>\n                    {\n                        products.length > 0 && products.map((product) => {\n                            return <ProductContainer key={product.id} product={product} fetchCategories={fetchProducts}/>\n                        })\n                    }\n                </div>\n\n                {\n                    !loading && products.length === 0 && <div className={s.warning}>\n                        <p>No items found</p>\n                    </div>\n                }\n            </>\n        }\n    </Container>)\n}\n\nexport default Products;"],"names":["toast","reducer","previousValue","currentValue","isLoggedIn","navigate","useNavigate","useState","products","setProducts","earnedMoney","setEarnedMoney","spendMoney","setSpendMoney","loading","setLoading","setMounted","value","setValue","state","setState","useEffect","fetchProducts","then","productsApi","startDate","moment","toISOString","endDate","response","sumSpendArr","map","el","price","purchasePrice","sumEarnedArr","sallingPrice","data","message","position","Container","className","s","type","color","height","width","Select","onChange","e","target","states","MenuItem","id","name","LocalizationProvider","dateAdapter","AdapterDateFns","Stack","spacing","MobileDateRangePicker","startText","endText","clearable","disableFuture","newValue","renderInput","startProps","endProps","TextField","Box","sx","mx","length","Math","round","reduce","product","ProductContainer","fetchCategories"],"sourceRoot":""}