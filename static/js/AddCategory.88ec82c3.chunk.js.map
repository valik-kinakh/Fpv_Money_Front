{"version":3,"file":"static/js/AddCategory.88ec82c3.chunk.js","mappings":"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","sources":["webpack://client/./src/Button/Button.module.css?2901","Button/SubmitButton.js","Button/UploadContent.js","webpack://client/./src/pages/AddCategory/AddCategory.module.css?a336","pages/AddCategory/AddCategory.js","services/categories.js","services/product.js","services/user.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnWrapper\":\"Button_btnWrapper__qLkFf\",\"btn\":\"Button_btn__EDhOk\"};","import s from \"./Button.module.css\";\n\nconst SubmitButton = ({ text }) => {\n  return (\n    <div className={s.btnWrapper}>\n      <button type=\"submit\" className={s.btn}>\n        {text}\n      </button>\n    </div>\n  );\n};\n\nexport default SubmitButton;\n","import s from \"./Button.module.css\";\n\nconst UploadContentButton = ({ text, onClick, disabled }) => {\n\n  return (\n    <div className={s.btnWrapper}>\n      <button type='button' className={s.btn} onClick={onClick} disabled={disabled}>\n        {text}\n      </button>\n    </div>\n  );\n};\n\nexport default UploadContentButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"loginContainer\":\"AddCategory_loginContainer__48jVe\",\"title\":\"AddCategory_title__ig8eV\",\"label\":\"AddCategory_label__PVbNJ\",\"input\":\"AddCategory_input__IItX5\",\"LoginInner\":\"AddCategory_LoginInner__SzoZM\",\"error\":\"AddCategory_error__Dv6j5\"};","import s from './AddCategory.module.css'\nimport { useNavigate} from 'react-router-dom';\nimport {categoriesApi} from \"../../services\";\nimport {useFormik} from \"formik\";\nimport * as Yup from 'yup';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from \"../../components/Container\";\nimport {useEffect} from \"react\";\nimport {SubmitButton} from \"../../Button\";\n\ntoast.configure();\n\nconst AddCategory = ({isLoggedIn}) => {\n    const navigate = useNavigate();\n\n    useEffect(()=>{\n        if (!isLoggedIn){\n            navigate('/login')\n        }\n    },[])\n\n    const initialValues={\n        name:''\n    }\n\n    const validationSchema = Yup.object().shape({\n        name: Yup.string().min(2,'At least two characters').max(50,'At least 50 characters').required('Required')\n    })\n\n    const onSubmit = async (values, onSubmitProps) => {\n        try {\n            const response = await categoriesApi.addCategory(values.name)\n            toast.success(response.message,{\n                position:'top-center'\n            })\n            onSubmitProps.resetForm();\n            navigate('/categories');\n        }catch (e) {\n            toast.error(e.message,{\n                position:'top-center'\n            })\n        }\n    }\n\n    const formik = useFormik({\n        initialValues,\n        validationSchema,\n        onSubmit\n    })\n    return(\n        <Container>\n            <div className={s.loginContainer}>\n                <form onSubmit={formik.handleSubmit}>\n                   <div className={s.LoginInner}>\n                       <h1 className={s.title}>New category</h1>\n                       <label htmlFor=\"login\" className={s.label}>\n                           Category\n                       </label>\n                       <input\n                           className={s.input}\n                           id=\"name\"\n                           name=\"name\"\n                           type=\"text\"\n                           placeholder='name'\n                           {...formik.getFieldProps(\"name\")}\n                       />\n                       {formik.touched.name && formik.errors.name ? (\n                           <p className={s.error}>{formik.errors.name}</p>\n                       ) : null}\n                   </div>\n                    <SubmitButton\n                        text='Add category'\n                        disabled={!(formik.dirty && formik.isValid)}\n                        className=\"submitButton\"\n                    />\n                </form>\n            </div>\n        </Container>\n    )\n}\n\nexport default AddCategory;","import axios from \"axios\";\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = \"\";\n    },\n};\n\nconst addCategory = (name) => {\n    return axios.post(`/Catigories/add/${name}`).then(({data}) => data);\n}\n\nconst removeCategory = (id) => {\n    return axios.delete(`/Catigories/delete/${id}`)\n}\n\nconst editCategory = (newName, id) => {\n    return axios.post(`Catigories/changeName/${id}?newName=${newName}`)\n        .then(({data})=>data);\n}\n\nconst getCategories = () => {\n    return axios.get('/Catigories/GetAll').then(({data})=>data);\n}\n\nconst categoriesApi = {\n    addCategory,\n    removeCategory,\n    editCategory,\n    getCategories\n}\n\nexport default categoriesApi;","import axios from \"axios\";\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = \"\";\n    },\n};\n\nconst addProduct = (product) => {\n    return axios.post('/Product/add', product).then(({data})=> data);\n}\n\nconst deleteProduct = (id) => {\n    return axios.delete(`/Product/delete/${id}`);\n}\n\nconst getProducts = () => {\n    return axios.get('/Product/GetAll').then(({data})=> data);\n}\n\nconst changeProductName = (id, name) => {\n    return axios.post(`Product/changeProductName/${id}?name=${name}`).then(({data})=> data);\n}\n\nconst changeProductCategory = (id, categoryName) => {\n    return axios.post(`Product/moveToCategory/${id}?categoryName=${categoryName}`).then(({data})=> data);\n}\n\nconst changeSellingPrice = (id, price) => {\n    return axios.post(`Product/changeSallingPrice/${id}?price=${price}`).then(({data})=> data);\n}\n\nconst addArrivalDate = (id, date) => {\n    return axios.post(`Product/addArrivalDate/${id}?time=${date}`).then(({data})=> data);\n}\n\nconst addSellingDate = (id, date) => {\n    return axios.post(`Product/addSallingDate/${id}?time=${date}`).then(({data})=> data);\n}\n\nconst productsApi = {\n    addProduct,\n    deleteProduct,\n    getProducts,\n    changeProductName,\n    changeProductCategory,\n    changeSellingPrice,\n    addArrivalDate,\n    addSellingDate\n}\n\nexport default productsApi;","import axios from \"axios\";\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = \"\";\n    },\n};\n\nconst userRegister = (user) => {\n    return axios.post('/User/register', user).then(({data})=> data);\n}\n\nconst userLogin = (user) => {\n    return axios.post('/User/login', user).then(({data})=>{\n        token.set(data.token);\n        return data;\n    });\n}\n\nconst deleteUser = (id) => {\n    return axios.delete(`/User/delete/${id}`).then(({data})=>data);\n}\n\nconst addUserCash = (cash, id) => {\n    return axios.post(`/User/addcashformonth/${id}`, cash).then(({data})=> data);\n}\n\nconst getAllUserMoney = (id) => {\n    return axios.get(`User/getAllUserMoney/${id}`).then(({data})=> data);\n}\n\nconst getAllUsers = () => {\n    return axios.get('User/getAllUsers').then(({data})=> data);\n}\n\nconst editLogin = (id,login) => {\n    return axios.post(`User/editLogin/${id}?newLogin=${login}`).then(({data})=> data);\n}\n\nconst usersApi = {\n    userRegister,\n    userLogin,\n    deleteUser,\n    addUserCash,\n    getAllUserMoney,\n    getAllUsers,\n    editLogin\n}\n\nexport default usersApi;"],"names":["text","className","s","type","onClick","disabled","toast","isLoggedIn","navigate","useNavigate","useEffect","validationSchema","Yup","shape","name","min","max","required","onSubmit","values","onSubmitProps","categoriesApi","response","message","position","resetForm","formik","useFormik","initialValues","Container","handleSubmit","htmlFor","id","placeholder","getFieldProps","touched","errors","dirty","isValid","addCategory","axios","then","data","removeCategory","editCategory","newName","getCategories","productsApi","addProduct","product","deleteProduct","getProducts","changeProductName","changeProductCategory","categoryName","changeSellingPrice","price","addArrivalDate","date","addSellingDate","token","usersApi","userRegister","user","userLogin","deleteUser","addUserCash","cash","getAllUserMoney","getAllUsers","editLogin","login"],"sourceRoot":""}